import { Configuration, OpenAIApi } from 'openai';
import { config } from 'dotenv';
import fs from 'fs';
import path from 'path';

// Read the .env file
config();

// Create a new OpenAI API client configuration
const configuration = new Configuration({
  apiKey: process.env.OPENAI_API_KEY,
});

// Create a new OpenAI API client
const openai = new OpenAIApi(configuration);

// Construct the file path using the path module
const filePath = path.join(process.env.PWD, 'src/example.js');
const outputFilePath = path.join(process.env.PWD, 'src/example.test.js');

// Read the file contents using the fs module
const fileContent = fs.readFileSync(filePath, 'utf-8');

// Set the file content as the prompt for the API request
const prompt = `Write a unit test with import statement for the following JavaScript function:
  ${fileContent}
  Test case:
  ###
`;

// Create a new chat completion, using the GPT-3.5 Turbo model
const completion = await openai.createCompletion({
  model: 'text-davinci-003',
  prompt,
  max_tokens: 2000,
  temperature: 0,
  top_p: 1,
  n: 1,
  frequency_penalty: 0,
  presence_penalty: 0,
  stop: ['###'],
});

// Print the message generated by the API
const result = completion.data.choices[0].text;
console.log('usage ===>', completion.data.usage);

// Write the message to a file
try {
  fs.writeFileSync(outputFilePath, result);
  console.log('Message written to file');
} catch (error) {
  console.error('Error writing message to file:', error);
}
